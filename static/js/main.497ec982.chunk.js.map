{"version":3,"sources":["components/Cita.jsx","components/Formulario.jsx","App.js","index.js"],"names":["Cita","cita","eliminarCita","className","mascota","propietario","fecha","hora","sintomas","onClick","id","Formulario","crearCita","useState","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","onSubmit","preventDefault","trim","uuid","type","placeholder","onChange","htmlFor","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","console","log","setItem","stringify","nuevasCitas","filter","titulo","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.497ec982.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cita = ({cita, eliminarCita}) =>{\r\n    return(\r\n        <div className=\"cita\">\r\n            <p> Mascota: <span>{cita.mascota}</span></p>\r\n            <p> Dueño: <span>{cita.propietario}</span></p>\r\n            <p> Fecha: <span>{cita.fecha}</span></p>\r\n            <p> Hora: <span>{cita.hora}</span></p>\r\n            <p> Síntomas: <span>{cita.sintomas}</span></p>            \r\n\r\n            <button\r\n                className=\"button eliminar u-full-width\"\r\n                onClick={()=>eliminarCita(cita.id)} // per evitar que s'executi la funcio nomes al carregar\r\n            >Eliminar &times;</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\nexport default Cita;","import React, { Fragment, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Formulario = ({crearCita}) => {\r\n\r\n    // Crear state de citas\r\n    const [cita, actualizarCita] = useState({\r\n        mascota: '',\r\n        propietario: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n    });\r\n\r\n    const [error, actualizarError] = useState(false);\r\n\r\n\r\n    //actualizarCita, funcio que s'ejectua cada vegada que l'usuari escriu\r\n    const actualizarState = (e) => {\r\n\r\n        // cita.mascota=e.target.value; no es pot fer no segueix les normes de react\r\n\r\n        actualizarCita({\r\n            ...cita,\r\n            [e.target.name]: e.target.value\r\n        })//amb spread operator fem una copia        \r\n    }\r\n\r\n    //extraer los valores, destructuring\r\n    const { mascota, propietario, fecha, hora, sintomas } = cita;\r\n\r\n    //quan l'usuari presioni agregar cita\r\n    const submitCita = (e) => {\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        //trim treu els espais en blanc dels principi al final\r\n        if (mascota.trim() === \"\" || propietario.trim() === \"\" || fecha.trim() === \"\" || hora.trim() === \"\" || sintomas.trim() === \"\") {\r\n            actualizarError(true);\r\n            return; //si hi ha un erro parem aqui, i actualitzarError es mante en true\r\n        }\r\n\r\n        //eliminar mensaje omple els camps\r\n        actualizarError(false);\r\n\r\n        //asignar un id\r\n        cita.id = uuid();\r\n        // console.log(cita);\r\n        //crear la cita\r\n\r\n        crearCita(cita);\r\n\r\n        //reiniciar el form\r\n        actualizarCita({\r\n            mascota: '',\r\n            propietario: '',\r\n            fecha: '',\r\n            hora: '',\r\n            sintomas: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Crear cita</h2>\r\n\r\n            {error ? <p className=\"alerta-error\">tots els camps son obligatoris</p> : null} {/* S'inicia amb false error, per tant no fa res */}\r\n\r\n            <form onSubmit={submitCita}>\r\n                <label> Nombre Mascota</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"nombre mascota\"\r\n                    onChange={actualizarState}\r\n                    value={mascota}\r\n                />\r\n\r\n                <label> Nombre Dueño</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"propietario\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"nombre dueño mascota\"\r\n                    onChange={actualizarState}\r\n                    value={propietario}\r\n                />\r\n\r\n                <label> Fecha </label>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={fecha}\r\n                />\r\n\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={hora}\r\n                />\r\n\r\n                <label htmlFor=\"\">Síntomas</label>\r\n                <textarea\r\n                    className=\"u-full-width\"\r\n                    name=\"sintomas\"\r\n                    onChange={actualizarState}\r\n                    value={sintomas}\r\n                ></textarea>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                >Enviar</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    crearCita: PropTypes.func.isRequired\r\n}\r\nexport default Formulario","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nimport Cita from \"./components/Cita\";\r\nimport Formulario from \"./components/Formulario\";\r\n\r\nfunction App() {\r\n\r\n   // Citas en localstorage\r\n   let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\r\n   if(!citasIniciales){\r\n     citasIniciales=[];\r\n   }\r\n \r\n  //array de citas\r\n  const [citas, guardarCitas] = useState(citasIniciales);\r\n\r\n  useEffect(() => {\r\n    let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\r\n    //seria com el document.ready o DOMContentLoaded\r\n    // quan s'actualitza algo es torna a recarregar\r\n    console.log(\"listo\");\r\n\r\n    if(citasIniciales){\r\n      localStorage.setItem('citas', JSON.stringify(citas))\r\n    }else{\r\n      localStorage.setItem('citas', JSON.stringify([]));\r\n    }\r\n  }, [citas]); //amb [] nomes es carrega cada vegada que canvia, en aquest cas citas, quan exemple fem api...millor possarho per evitar cicles\r\n\r\n\r\n\r\n  //Funcion que tome las citas actuales y agregue la nueva\r\n  const crearCita = (cita) => {\r\n    console.log(cita);\r\n    guardarCitas([\r\n      ...citas, //per copiar les que hi haigi\r\n      cita,\r\n    ]);\r\n  };\r\n\r\n  // Funcion eliminar cita por id\r\n\r\n  const eliminarCita = (id) => {\r\n    console.log(id);\r\n\r\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\r\n    guardarCitas(nuevasCitas);\r\n  };\r\n\r\n  // Mensaje si no hay citas\r\n  const titulo = citas.length === 0 ? \"No hay citas\" : \"Administra tus citas\";\r\n\r\n  // useEffect\r\n\r\n \r\n\r\n \r\n  return (\r\n    <Fragment>\r\n      <h1>Administrador de pacientes</h1>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"one-half column\">\r\n            <Formulario crearCita={crearCita} />\r\n          </div>\r\n          <div className=\"one-half column\">\r\n            <h2>{titulo}</h2>\r\n            {/* {citas.length === 0 ? (<h2>No hay citas</h2>) : (<h2>Administra tus citas</h2>)} */}\r\n            {citas.map((cita) => (\r\n              <Cita key={cita.id} cita={cita} eliminarCita={eliminarCita} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}